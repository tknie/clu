# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: read
  actions: read

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
#          - os: ubuntu-latest
#            arch: arm64
        go-version: [ '1.23.x' ]
    steps:
    - uses: actions/checkout@v4

    - name: Install libpam dev
      run: |
          sudo apt-get update
          sudo apt-get install libpam0g-dev libde265-dev
          
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}

#    - name: Generate
#      run: go generate .

    - name: Build
      env:
        GOARCH: ${{ matrix.arch }}
      run: make VERSION=$(grep "^VERSION" Makefile|awk '{print $3}'|sed 's/[v]//g'|sed 's/\.0$//g').${{ github.run_number }}

    - name: Test
      run: |
        go test -json > TestResults-${{ matrix.go-version }}-${{ matrix.arch }}.json
        go install github.com/jstemmer/go-junit-report@latest
        go test -v ./... | go-junit-report -set-exit-code > report.xml
        find .

    - name: Upload Go test results
      uses: actions/upload-artifact@v4
      with:
        name: cluapi-results-${{ matrix.go-version }}
        path: TestResults-${{ matrix.go-version }}.json

    - name: Test Summary
      uses: test-summary/action@v1
      with:
          paths: |
            ./report.xml            
      if: always()
    - name: Prepare Docker
      run: make promote prepareUpload VERSION=$(grep "^VERSION" Makefile|awk '{print $3}'|sed 's/[v]//g'|sed 's/\.0$//g').${{ github.run_number }}

    - name: Build the Docker image
      run: make docker VERSION=$(grep "^VERSION" Makefile|awk '{print $3}'|sed 's/[v]//g'|sed 's/\.0$//g').${{ github.run_number }}

#    - name: Login to private registry
#      uses: docker/login-action@v3
#      with:
#        registry: my.private.registry.com
#        username: ${{ secrets.DOCKER_HUB_USER }}
#        password: ${{ secrets.DOCKER_HUB_TOKEN }}

#    - name: Push the Docker image
#      run: |
#        docker push thknie/cluapi:$(grep ^VERSION Makefile|awk '{print $3}'|sed 's/[v]//g'|sed 's/\.0$//g').${{ github.run_number }}
  
   
